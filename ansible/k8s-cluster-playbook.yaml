---
# Playbook Kubernetes Master + Workers Auto Join
- name: Setup Kubernetes Control-Plane
  hosts: master
  become: yes
  vars:
    pod_network_cidr: "10.244.0.0/16"

  tasks:
    - name: Update & upgrade apt
      apt:
        update_cache: yes
        upgrade: dist

    - name: Disable swap
      command: swapoff -a
      ignore_errors: yes

    - name: Comment swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*swap.*)$'
        replace: '#\1'

    - name: Install containerd
      apt:
        name: containerd
        state: present

    - name: Enable containerd service
      systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Configure containerd default config
      command: >
        bash -c "mkdir -p /etc/containerd && containerd config default > /etc/containerd/config.toml"
      args:
        creates: /etc/containerd/config.toml

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted

    - name: Install dependencies for kubeadm
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
        state: present

    - name: Add Kubernetes apt key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repo
      ansible.builtin.apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Install kubelet, kubeadm, kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold kube packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: hold

    - name: Initialize Kubernetes control-plane
      command: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Setup kubeconfig for current user
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Apply Flannel CNI
      command: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      environment:
        KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"

    - name: Generate kubeadm join command for workers
      command: kubeadm token create --print-join-command
      register: join_cmd

    - name: Save join command to file
      copy:
        content: "{{ join_cmd.stdout }}"
        dest: /tmp/kube_join_cmd.sh
        mode: '0644'


- name: Setup Kubernetes Worker Node
  hosts: workers
  become: yes
  tasks:
    - name: Fetch join command from master
      fetch:
        src: /tmp/kube_join_cmd.sh
        dest: /tmp/kube_join_cmd.sh
        flat: yes

    - name: Update & upgrade apt
      apt:
        update_cache: yes
        upgrade: dist

    - name: Disable swap
      command: swapoff -a
      ignore_errors: yes

    - name: Comment swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*swap.*)$'
        replace: '#\1'

    - name: Install containerd
      apt:
        name: containerd
        state: present

    - name: Enable containerd service
      systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Configure containerd default config
      command: >
        bash -c "mkdir -p /etc/containerd && containerd config default > /etc/containerd/config.toml"
      args:
        creates: /etc/containerd/config.toml

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted

    - name: Install dependencies for kubeadm
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
        state: present

    - name: Add Kubernetes apt key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repo
      ansible.builtin.apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Install kubelet, kubeadm, kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold kube packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: hold

    - name: Join the node to Kubernetes cluster
      command: bash /tmp/kube_join_cmd.sh
      args:
        creates: /etc/kubernetes/kubelet.conf
