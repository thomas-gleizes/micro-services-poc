volumes:
  kafka-1-data:
  kafka-2-data:
  kafka-3-data:
  product_db:

networks:
  reverse-proxy:

services:
  kafka_1:
    image: apache/kafka:4.0.0
    container_name: Kalat.System.Kafka.1
    volumes:
      - kafka-1-data:/var/lib/kafka/data
    networks:
      reverse-proxy:
        aliases:
          - kafka_1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_1:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka_1:9093,2@kafka_2:9093,3@kafka_3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka_2:
    image: apache/kafka:4.0.0
    container_name: Kalat.System.Kafka.2
    volumes:
      - kafka-2-data:/var/lib/kafka/data
    networks:
      reverse-proxy:
        aliases:
          - kafka_2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_2:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka_1:9093,2@kafka_2:9093,3@kafka_3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka_3:
    image: apache/kafka:4.0.0
    container_name: Kalat.System.Kafka.3
    volumes:
      - kafka-3-data:/var/lib/kafka/data
    networks:
      reverse-proxy:
        aliases:
          - kafka_3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_3:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka_1:9093,2@kafka_2:9093,3@kafka_3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: Kalat.System.Kafka_ui
    ports:
      - "8080:8080"
    networks:
      reverse-proxy:
        aliases:
          - event_ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka_1:9092,kafka_2:9092,kafka_3:9092

  product_service:
    build: .docker/node
    container_name: Kalat.Modules.Product
    command: bash -c "yarn run start:debug"
    ports:
      - "3000:3000"
      - "9229:9229"
    working_dir: /usr/src/Kalat.Modules.Product
    volumes:
      - ./services/Kalat.Modules.Product:/usr/src/Kalat.Modules.Product
    environment:
      PORT: 3000
      DATABASE_URL: "mongodb://product_db:27017/product_db"
      KAFKA_BROKERS: 'kafka_1:9092,kafka_2:9092,kafka_3:9092'
      KAFKA_CONSUMER_GROUP: 'product-group'
      QUERY_TIMEOUT: 30000
      KAFKA_CONSUMER_RETRIES: 10
      KAFKA_CONSUMER_INITIAL_RETRY_TIME: 200
      SERVICE_NAME: 'Kalat.Modules.Product'
      SERVICE_VERSION: 'v1alpha'
      LOG_LEVEL: 'debug'
      CHOKIDAR_USEPOLLING: "true"
    networks:
      reverse-proxy:
        aliases:
          - event_product_service
    depends_on:
      - product_db

  product_db:
    image: mongo:latest
    container_name: Kalat.Data.Product
    ports:
      - "27017:27017"
    volumes:
      - product_db:/data/db
    networks:
      reverse-proxy:
        aliases:
          - event_product_db
